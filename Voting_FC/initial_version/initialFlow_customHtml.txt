<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>FlexCheck Voting</title>
  <style>

    
    .container {
      max-width: 600px;
      margin: 0 auto;
    }
    
    /* Login Widget */
    .login-widget {
      background: rgba(11, 22, 48, 0.9);
      border: 2px solid #27BEFA;
      border-radius: 8px;
      padding: 1rem;
      margin-bottom: 1rem;
    }
    
    .login-title {
      color: #27BEFA;
      font-size: 1rem;
      margin-bottom: 0.75rem;
      text-align: center;
    }
    
    .login-form {
      display: flex;
      gap: 0.5rem;
    }
    
    .login-input {
      flex: 1;
      padding: 0.6rem;
      background: rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 6px;
      color: white;
      font-size: 0.9rem;
    }
    
    .btn {
      padding: 0.6rem 1.2rem;
      background: #27BEFA;
      border: none;
      border-radius: 6px;
      color: #000;
      font-weight: bold;
      cursor: pointer;
      text-transform: uppercase;
      font-size: 0.85rem;
      white-space: nowrap;
    }
    
    .btn:hover { background: #1fa8e0; }
    .btn:disabled { opacity: 0.5; cursor: not-allowed; }
    
    .user-info {
      text-align: center;
      font-size: 0.85rem;
    }
    
    .user-email { color: #27BEFA; font-weight: bold; }
    
    /* Voting Widget */
    .voting-widget {
      background: rgba(11, 22, 48, 0.9);
      border: 2px solid #27BEFA;
      border-radius: 8px;
      padding: 1rem;
      margin-bottom: 1rem;
    }
    
    .voting-disabled {
      text-align: center;
      padding: 2rem 1rem;
      color: #8b909b;
    }
    
    /* Tier Selector with Selections */
    .tier-selections {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 0.5rem;
      margin-bottom: 1rem;
    }
    
    .tier-card {
      background: rgba(255, 255, 255, 0.05);
      border: 2px solid rgba(255, 255, 255, 0.2);
      border-radius: 8px;
      padding: 0.6rem;
      text-align: center;
      cursor: pointer;
      transition: all 0.3s;
      position: relative;
    }
    
    .tier-card.active {
      border-color: #27BEFA;
      background: rgba(39, 190, 250, 0.1);
    }
    
    .tier-card.voted::after {
      content: '✓';
      position: absolute;
      top: -6px;
      right: -6px;
      background: #4ade80;
      color: #000;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      font-size: 0.7rem;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
    }
    
    .tier-emoji { font-size: 1.5rem; display: block; margin-bottom: 0.25rem; }
    .tier-label { font-size: 0.7rem; text-transform: uppercase; font-weight: 600; color: #8b909b; }
    .tier-selection { font-size: 0.75rem; color: white; margin-top: 0.25rem; font-weight: 600; }
    .tier-selection.empty { color: #555; font-style: italic; }
    
    /* Question */
    .question {
      text-align: center;
      font-size: 1rem;
      margin-bottom: 0.75rem;
      color: #27BEFA;
      font-weight: 600;
    }
    
    /* Horizontal Carousel */
    .carousel-container {
      position: relative;
      margin-bottom: 1rem;
    }
    
    .carousel {
      display: flex;
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      gap: 1rem;
      padding: 0.5rem;
      scrollbar-width: thin;
      scrollbar-color: #27BEFA rgba(255, 255, 255, 0.1);
    }
    
    .carousel::-webkit-scrollbar { height: 6px; }
    .carousel::-webkit-scrollbar-track { background: rgba(255, 255, 255, 0.1); border-radius: 3px; }
    .carousel::-webkit-scrollbar-thumb { background: #27BEFA; border-radius: 3px; }
    
    .competitor-card {
      min-width: 140px;
      max-width: 140px;
      background: rgba(255, 255, 255, 0.05);
      border: 2px solid rgba(255, 255, 255, 0.1);
      border-radius: 8px;
      padding: 0.75rem;
      text-align: center;
      cursor: pointer;
      scroll-snap-align: start;
      transition: all 0.3s;
      position: relative;
    }
    
    .competitor-card:hover {
      border-color: #27BEFA;
      transform: scale(1.05);
    }
    
    .competitor-card.selected {
      border-color: #4ade80;
      background: rgba(74, 222, 128, 0.15);
      box-shadow: 0 0 15px rgba(74, 222, 128, 0.3);
    }
    
    .competitor-card.selected::after {
      content: '✓';
      position: absolute;
      top: 6px;
      right: 6px;
      background: #4ade80;
      color: #000;
      width: 24px;
      height: 24px;
      border-radius: 50%;
      font-size: 1rem;
      font-weight: bold;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .placement {
      position: absolute;
      top: 6px;
      left: 6px;
      background: #27BEFA;
      color: #000;
      width: 24px;
      height: 24px;
      border-radius: 50%;
      font-weight: bold;
      font-size: 0.9rem;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .competitor-image {
      width: 100%;
      height: 160px;
      background: rgba(0, 0, 0, 0.3);
      border-radius: 6px;
      margin-bottom: 0.5rem;
      overflow: hidden;
    }
    
    .competitor-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .competitor-name {
      color: #27BEFA;
      font-weight: bold;
      font-size: 0.75rem;
      margin-bottom: 0.25rem;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
    
    .competitor-score {
      font-size: 1.2rem;
      font-weight: bold;
    }
    
    /* Submit Button */
    .submit-section {
      text-align: center;
    }
    
    .btn-large {
      width: 100%;
      padding: 1rem;
      font-size: 1rem;
      background: linear-gradient(135deg, #27BEFA, #4ade80);
      border: none;
      border-radius: 8px;
      color: white;
      font-weight: bold;
      cursor: pointer;
      text-transform: uppercase;
    }
    
    .btn-large:hover:not(:disabled) { transform: scale(1.02); }
    .btn-large:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      background: #333;
    }
    
    .btn-voted {
      background: linear-gradient(135deg, #4ade80, #22c55e);
      cursor: default;
    }
    
    /* Results Widget */
    .results-widget {
      background: rgba(11, 22, 48, 0.9);
      border: 2px solid #4ade80;
      border-radius: 8px;
      padding: 1.5rem;
      margin-bottom: 1rem;
      display: none;
    }
    
    .results-widget.show { display: block; }
    
    .results-title {
      color: #4ade80;
      font-size: 1.2rem;
      text-align: center;
      margin-bottom: 1rem;
      font-weight: bold;
    }
    
    .results-grid {
      display: grid;
      gap: 0.75rem;
      margin-bottom: 1.5rem;
    }
    
    .result-tier {
      background: rgba(255, 255, 255, 0.05);
      border-radius: 6px;
      padding: 1rem;
    }
    
    .result-tier-name {
      color: #27BEFA;
      font-weight: bold;
      margin-bottom: 0.5rem;
      text-transform: uppercase;
      font-size: 0.85rem;
    }
    
    .result-standings {
      display: flex;
      justify-content: space-around;
      margin-top: 0.5rem;
    }
    
    .standing-item {
      text-align: center;
    }
    
    .standing-place {
      color: #8b909b;
      font-size: 0.7rem;
    }
    
    .standing-votes {
      color: white;
      font-weight: bold;
      font-size: 1.1rem;
    }
    
    .results-cta {
      background: rgba(39, 190, 250, 0.1);
      border: 1px solid #27BEFA;
      border-radius: 6px;
      padding: 1rem;
      text-align: center;
      margin-top: 1rem;
    }
    
    .results-cta-title {
      color: #27BEFA;
      font-weight: bold;
      margin-bottom: 0.5rem;
    }
    
    .results-cta-text {
      color: #8b909b;
      font-size: 0.85rem;
      margin-bottom: 0.75rem;
    }
    
    .results-cta-link {
      display: inline-block;
      padding: 0.6rem 1.5rem;
      background: #27BEFA;
      color: #000;
      text-decoration: none;
      border-radius: 6px;
      font-weight: bold;
      margin-top: 0.5rem;
    }
    
    /* Overlay */
    .overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0.9);
      display: none;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      padding: 20px;
    }
    
    .overlay.show { display: flex; }
    
    /* Confirmation Modal */
    .confirm-modal {
      background: linear-gradient(135deg, #0b1630, #162444);
      border: 3px solid #27BEFA;
      border-radius: 16px;
      padding: 2rem;
      text-align: center;
      max-width: 400px;
      width: 100%;
    }
    
    .confirm-title {
      color: #27BEFA;
      font-size: 1.3rem;
      margin-bottom: 1rem;
      font-weight: bold;
    }
    
    .confirm-selections {
      background: rgba(0, 0, 0, 0.3);
      border-radius: 8px;
      padding: 1rem;
      margin-bottom: 1.5rem;
    }
    
    .confirm-item {
      display: flex;
      justify-content: space-between;
      padding: 0.5rem 0;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .confirm-item:last-child { border-bottom: none; }
    
    .confirm-tier { color: #8b909b; font-size: 0.85rem; }
    .confirm-name { color: white; font-weight: bold; }
    
    .confirm-buttons {
      display: flex;
      gap: 0.75rem;
    }
    
    .btn-secondary {
      flex: 1;
      padding: 0.75rem;
      background: transparent;
      border: 1px solid rgba(255, 255, 255, 0.3);
      border-radius: 6px;
      color: white;
      cursor: pointer;
      font-weight: bold;
    }
    
    /* RNG Modal */
    .rng-modal {
      background: linear-gradient(135deg, #0b1630, #162444);
      border: 3px solid #27BEFA;
      border-radius: 16px;
      padding: 2.5rem;
      text-align: center;
      max-width: 400px;
      width: 100%;
    }
    
    .rng-title {
      color: #27BEFA;
      font-size: 1.3rem;
      margin-bottom: 1rem;
      text-transform: uppercase;
      font-weight: bold;
    }
    
    .rng-display {
      font-size: 5rem;
      font-weight: bold;
      color: #4ade80;
      margin: 1.5rem 0;
      text-shadow: 0 0 30px rgba(74, 222, 128, 0.5);
      min-height: 100px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .rng-display.spinning { animation: spin 0.1s infinite; }
    
    @keyframes spin {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.1); }
    }
    
    .rng-subtitle {
      color: #8b909b;
      font-size: 0.9rem;
    }
    
    /* Coupon Modal */
    .coupon-modal {
      background: linear-gradient(135deg, #0b1630, #162444);
      border: 3px solid #4ade80;
      border-radius: 16px;
      padding: 2rem;
      text-align: center;
      max-width: 400px;
      width: 100%;
    }
    
    .coupon-title {
      color: #4ade80;
      font-size: 1.5rem;
      margin-bottom: 1rem;
      font-weight: bold;
    }
    
    .coupon-text {
      color: #8b909b;
      margin-bottom: 1rem;
    }
    
    .coupon-input {
      width: 100%;
      padding: 0.75rem;
      background: rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 6px;
      color: white;
      font-size: 0.9rem;
      margin-bottom: 1rem;
    }
    
    .coupon-buttons {
      display: flex;
      gap: 0.75rem;
    }
    
    /* Multiplier Result Modal */
    .multiplier-result-modal {
      background: linear-gradient(135deg, #0b1630, #162444);
      border: 3px solid #4ade80;
      border-radius: 16px;
      padding: 2.5rem;
      text-align: center;
      max-width: 400px;
      width: 100%;
    }
    
    .multiplier-result-title {
      color: #4ade80;
      font-size: 1.5rem;
      margin-bottom: 1rem;
      font-weight: bold;
    }
    
    .multiplier-result-value {
      font-size: 4rem;
      font-weight: bold;
      color: #4ade80;
      margin: 1.5rem 0;
      text-shadow: 0 0 30px rgba(74, 222, 128, 0.5);
    }
    
    .multiplier-result-text {
      color: #8b909b;
      font-size: 1rem;
      margin-bottom: 2rem;
    }
    
    /* Thanks Modal */
    .thanks-modal {
      background: linear-gradient(135deg, #0b1630, #162444);
      border: 3px solid #27BEFA;
      border-radius: 16px;
      padding: 2.5rem;
      text-align: center;
      max-width: 400px;
      width: 100%;
    }
    
    .thanks-title {
      color: #27BEFA;
      font-size: 1.5rem;
      margin-bottom: 1rem;
      font-weight: bold;
    }
    
    .thanks-text {
      color: #8b909b;
      font-size: 1rem;
      margin-bottom: 1.5rem;
    }
    
    /* Timezone Modal */
    .timezone-modal {
      background: linear-gradient(135deg, #0b1630, #162444);
      border: 3px solid #27BEFA;
      border-radius: 16px;
      padding: 2rem;
      max-width: 400px;
      width: 100%;
    }
    
    .timezone-title {
      color: #27BEFA;
      font-size: 1.3rem;
      text-align: center;
      margin-bottom: 1.5rem;
      font-weight: bold;
    }
    
    .timezone-info {
      background: rgba(0, 0, 0, 0.3);
      border-radius: 8px;
      padding: 1rem;
      margin-bottom: 1rem;
    }
    
    .timezone-row {
      display: flex;
      justify-content: space-between;
      padding: 0.75rem 0;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .timezone-row:last-child { border-bottom: none; }
    
    .timezone-label {
      color: #8b909b;
      font-size: 0.85rem;
    }
    
    .timezone-value {
      color: white;
      font-weight: bold;
    }
    
    .timezone-close {
      width: 100%;
      padding: 0.75rem;
      background: #27BEFA;
      border: none;
      border-radius: 6px;
      color: #000;
      font-weight: bold;
      cursor: pointer;
    }
    
    @media (max-width: 400px) {
      .competitor-card {
        min-width: 120px;
        max-width: 120px;
      }
      
      .competitor-image { height: 140px; }
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Login Widget -->
    <div id="login-widget" class="login-widget"></div>
    
    <!-- Voting Widget -->
    <div id="voting-widget" class="voting-widget"></div>
    
    <!-- Results Widget -->
    <div id="results-widget" class="results-widget"></div>
    
    <!-- Overlay for modals -->
    <div id="overlay" class="overlay"></div>
  </div>

  <script>
    // Configuration
    const CONFIG = {
      DEV_MODE: true,
      USE_MOCK: true
    };
    
    // Mock data
    const MOCK_DATA = {
      top: [
        { entryId: 3792, rank: 1, score: 86.8, socialHandle: "@Anonymous", photos: '["https://www.gameplanfitness.com/wp-content/uploads/fluentform/ff-0a6cee1c84e497280c6d70be986cd0c3-ff-IMG_8144.png"]' },
        { entryId: 3791, rank: 2, score: 75.9, socialHandle: "Anonymous", photos: '["https://www.gameplanfitness.com/wp-content/uploads/fluentform/ff-11090d53e84d68c8ae97d137727b05e1-ff-IMG_8141.png"]' },
        { entryId: 3725, rank: 3, score: 75.0, socialHandle: "@chase_ribordy", photos: '["https://www.gameplanfitness.com/wp-content/uploads/fluentform/ff-c038c2edd5ae2ca3ac3f1db30302e3a9-ff-front-pic.png"]' }
      ],
      mid: [
        { entryId: 3740, rank: 1, score: 69.3, socialHandle: "@Grad chase", photos: '["https://www.gameplanfitness.com/wp-content/uploads/fluentform/ff-19be5c0a5930d35a45f95f5a39d27e09-ff-IMG_0145.jpg"]' },
        { entryId: 3738, rank: 2, score: 71.7, socialHandle: "@HS Senior", photos: '["https://www.gameplanfitness.com/wp-content/uploads/fluentform/ff-d3409d695336dd58c9ce507d619dc765-ff-WhatsApp-Image-2025-09-28-at-18.03.55_355bbd98.jpg"]' },
        { entryId: 3741, rank: 3, score: 65.1, socialHandle: "@chase_ribordy", photos: '["https://www.gameplanfitness.com/wp-content/uploads/fluentform/ff-962a974e8c49cbb472588db25dbd351f-ff-WhatsApp-Image-2025-09-28-at-21.47.27_032d8727.jpg"]' }
      ],
      low: [
        { entryId: 3736, rank: 1, score: 45.5, socialHandle: "@Young chase", photos: '["https://www.gameplanfitness.com/wp-content/uploads/fluentform/ff-5944435d86cae934f41148b8667860f0-ff-WhatsApp-Image-2025-09-28-at-12.20.41_fbcaec7f.jpg"]' },
        { entryId: 3737, rank: 2, score: 52.3, socialHandle: "@First Bulk", photos: '["https://www.gameplanfitness.com/wp-content/uploads/fluentform/ff-e489f0753bcc0f13c84958bcc80a5072-ff-WhatsApp-Image-2025-09-28-at-12.21.56_02f4720a.jpg"]' },
        { entryId: 3739, rank: 3, score: 57.8, socialHandle: "@Uni Bulk", photos: '["https://www.gameplanfitness.com/wp-content/uploads/fluentform/ff-055fa3af63148581855c58cb33e76ebe-ff-WhatsApp-Image-2025-09-28-at-12.22.29_e99aa457.jpg"]' }
      ]
    };
    
    // State
    const STATE = {
      user: null,
      currentTier: 'top',
      selections: { top: null, mid: null, low: null },
      competitors: MOCK_DATA,
      voteMultiplier: null,
      hasVoted: false
    };
    
    // Helpers
    function getFirstPhoto(photosStr) {
      try {
        const photos = JSON.parse(photosStr);
        return photos[0] || 'https://placehold.co/300x400?text=No+Photo';
      } catch {
        return 'https://placehold.co/300x400?text=No+Photo';
      }
    }
    
    function isVotingOpen() {
      if (CONFIG.DEV_MODE) return true;
      const now = new Date();
      const day = now.getDay();
      const hour = now.getHours();
      return (day === 4 && hour >= 19) || (day === 5 && hour < 19);
    }
    
    // Login Widget
    function renderLogin() {
      const widget = document.getElementById('login-widget');
      
      if (STATE.user) {
        widget.innerHTML = `
          <div class="user-info">
            <div style="color: #8b909b;">Signed in as: <span class="user-email">${STATE.user.email}</span></div>
          </div>
        `;
      } else {
        widget.innerHTML = `
          <h3 class="login-title">FlexCheck Voting - Sign In</h3>
          <div class="login-form">
            <input type="email" id="email-input" class="login-input" placeholder="your@email.com">
            <button class="btn" onclick="login()">Sign In</button>
          </div>
          <p style="text-align: center; color: #555; font-size: 0.75rem; margin-top: 0.5rem;">
            Demo: test@example.com
          </p>
        `;
      }
    }
    
    // Voting Widget
    function renderVoting() {
      const widget = document.getElementById('voting-widget');
      
      if (!STATE.user) {
        widget.innerHTML = '<div class="voting-disabled">🔒 Sign in to vote</div>';
        return;
      }
      
      if (!isVotingOpen()) {
        widget.innerHTML = '<div class="voting-disabled">⏰ Voting opens Thursday 7pm CT</div>';
        return;
      }
      
      const competitors = STATE.competitors[STATE.currentTier];
      
      widget.innerHTML = `
        <div class="tier-selections">
          ${['top', 'mid', 'low'].map(tier => {
            const emoji = tier === 'top' ? '🔥' : tier === 'mid' ? '📈' : '💀';
            const label = tier === 'top' ? 'Top' : tier === 'mid' ? 'Mid' : 'Bot';
            const selected = STATE.selections[tier];
            const selectionName = selected ? 
              STATE.competitors[tier].find(c => c.entryId === selected)?.socialHandle : 
              'Not selected';
            
            return `
              <div class="tier-card ${STATE.currentTier === tier ? 'active' : ''} ${STATE.user[`voted${label}`] ? 'voted' : ''}" 
                   onclick="changeTier('${tier}')">
                <span class="tier-emoji">${emoji}</span>
                <div class="tier-label">${label} Tier</div>
                <div class="tier-selection ${!selected ? 'empty' : ''}">${selectionName}</div>
              </div>
            `;
          }).join('')}
        </div>
        
        <div class="question">Who advances to semifinals?</div>
        
        <div class="carousel-container">
          <div class="carousel">
            ${competitors.map((comp, idx) => `
              <div class="competitor-card ${STATE.selections[STATE.currentTier] === comp.entryId ? 'selected' : ''}" 
                   onclick="selectCompetitor(${comp.entryId})">
                <div class="placement">${idx + 1}</div>
                <div class="competitor-image">
                  <img src="${getFirstPhoto(comp.photos)}" alt="${comp.socialHandle}">
                </div>
                <div class="competitor-name">${comp.socialHandle}</div>
                <div class="competitor-score">${comp.score.toFixed(1)}</div>
              </div>
            `).join('')}
          </div>
        </div>
        
        <div class="submit-section">
          ${STATE.hasVoted ? `
            <button class="btn-large btn-voted" disabled>
              ✓ Vote Cast - Multiplier: ${STATE.voteMultiplier}x
            </button>
          ` : `
            <button class="btn-large" 
                    ${!STATE.selections.top || !STATE.selections.mid || !STATE.selections.low ? 'disabled' : ''}
                    onclick="showConfirmation()">
              ${STATE.selections.top && STATE.selections.mid && STATE.selections.low ? 
                'Confirm Vote' : 'Select one from each tier'}
            </button>
          `}
        </div>
      `;
    }
    
    // Results Widget
    function renderResults() {
      const widget = document.getElementById('results-widget');
      
      // Get user's timezone
      const userTZ = Intl.DateTimeFormat().resolvedOptions().timeZone;
      const userTime = new Date('2025-01-10T19:00:00-06:00').toLocaleTimeString('en-US', {
        timeZone: userTZ,
        hour: 'numeric',
        minute: '2-digit',
        hour12: true
      });
      
      widget.innerHTML = `
        <h2 class="results-title">Current Vote Standings</h2>
        
        <div class="results-grid">
          ${['top', 'mid', 'low'].map(tier => {
            const label = tier === 'top' ? 'Top' : tier === 'mid' ? 'Mid' : 'Bot';
            // Mock vote counts
            const votes = [Math.floor(Math.random() * 500) + 100, Math.floor(Math.random() * 400) + 50, Math.floor(Math.random() * 300) + 20];
            votes.sort((a, b) => b - a);
            
            return `
              <div class="result-tier">
                <div class="result-tier-name">${label} Tier</div>
                <div class="result-standings">
                  <div class="standing-item">
                    <div class="standing-place">1st</div>
                    <div class="standing-votes">${votes[0]}</div>
                  </div>
                  <div class="standing-item">
                    <div class="standing-place">2nd</div>
                    <div class="standing-votes">${votes[1]}</div>
                  </div>
                  <div class="standing-item">
                    <div class="standing-place">3rd</div>
                    <div class="standing-votes">${votes[2]}</div>
                  </div>
                </div>
              </div>
            `;
          }).join('')}
        </div>
        
        <div style="text-align: center; color: #8b909b; font-size: 1rem; margin: 1.5rem 0; padding: 1rem; background: rgba(0,0,0,0.3); border-radius: 8px;">
          <strong style="color: #27BEFA;">Can't tell who is winning?</strong><br>
          The only way to find out is to watch it LIVE!
        </div>
        
        <div class="results-cta">
          <div class="results-cta-title">🎥 Watch the Live Results!</div>
          <div class="results-cta-text">
            Join us Friday at <span style="color: #27BEFA; cursor: pointer; text-decoration: underline;" onclick="showTimezoneConverter()">7pm CT</span> on Instagram with @chase_ribordy for the live semifinalist announcement!
          </div>
          <a href="https://instagram.com/chase_ribordy" target="_blank" class="results-cta-link">
            Follow on Instagram
          </a>
        </div>
        
        <div class="results-cta" style="margin-top: 1rem;">
          <div class="results-cta-title">💬 Can't Watch Live?</div>
          <div class="results-cta-text">
            Join the community and get updates on who is winning the FlexCheck Championship!
          </div>
          <a href="https://discord.gg/flexcheck" target="_blank" class="results-cta-link">
            Join Discord
          </a>
        </div>
      `;
    }
    
    // Actions
    window.login = function() {
      const email = document.getElementById('email-input').value.trim();
      if (!email) return;
      
      STATE.user = {
        email: email,
        votedTop: false,
        votedMid: false,
        votedLow: false
      };
      
      renderLogin();
      renderVoting();
    };
    
    window.logout = function() {
      STATE.user = null;
      STATE.selections = { top: null, mid: null, low: null };
      STATE.hasVoted = false;
      STATE.voteMultiplier = null;
      document.getElementById('results-widget').classList.remove('show');
      renderLogin();
      renderVoting();
    };
    
    window.changeTier = function(tier) {
      STATE.currentTier = tier;
      renderVoting();
    };
    
    window.selectCompetitor = function(entryId) {
      STATE.selections[STATE.currentTier] = entryId;
      renderVoting();
    };
    
    window.showConfirmation = function() {
      const overlay = document.getElementById('overlay');
      
      overlay.innerHTML = `
        <div class="confirm-modal">
          <div class="confirm-title">Confirm Your Votes</div>
          <div class="confirm-selections">
            ${['top', 'mid', 'low'].map(tier => {
              const label = tier === 'top' ? 'Top' : tier === 'mid' ? 'Mid' : 'Bot';
              const competitor = STATE.competitors[tier].find(c => c.entryId === STATE.selections[tier]);
              return `
                <div class="confirm-item">
                  <span class="confirm-tier">${label} Tier:</span>
                  <span class="confirm-name">${competitor.socialHandle}</span>
                </div>
              `;
            }).join('')}
          </div>
          <p style="color: #8b909b; margin-bottom: 1rem; font-size: 0.9rem;">
            Ready to generate your vote multiplier?
          </p>
          <div class="confirm-buttons">
            <button class="btn-secondary" onclick="closeOverlay()">Cancel</button>
            <button class="btn" style="flex: 1;" onclick="showRNG()">Let's Go!</button>
          </div>
        </div>
      `;
      overlay.classList.add('show');
    };
    
    window.showRNG = function() {
      const overlay = document.getElementById('overlay');
      let currentNumber = 1;
      let iterations = 0;
      const maxIterations = 30;
      
      overlay.innerHTML = `
        <div class="rng-modal">
          <div class="rng-title">Vote Multiplier</div>
          <div class="rng-display spinning" id="rng-display">1</div>
          <div class="rng-subtitle">Generating your multiplier...</div>
        </div>
      `;
      
      const interval = setInterval(() => {
        currentNumber = Math.floor(Math.random() * 100) + 1;
        document.getElementById('rng-display').textContent = currentNumber;
        iterations++;
        
        if (iterations >= maxIterations) {
          clearInterval(interval);
          
          const finalNumber = Math.floor(Math.random() * 100) + 1;
          const display = document.getElementById('rng-display');
          display.textContent = finalNumber;
          display.classList.remove('spinning');
          
          STATE.voteMultiplier = finalNumber;
          
          setTimeout(() => {
            showMultiplierResult(finalNumber);
          }, 1500);
        }
      }, 100);
    };
    
    function showMultiplierResult(multiplier) {
      const overlay = document.getElementById('overlay');
      
      overlay.innerHTML = `
        <div class="multiplier-result-modal">
          <div class="multiplier-result-title">🎉 Your Vote Counted For</div>
          <div class="multiplier-result-value">${multiplier}x</div>
          <div class="multiplier-result-text">
            Your selections received <strong style="color: #4ade80;">${multiplier} points</strong> each!
          </div>
          <button class="btn" style="width: 100%; padding: 1rem;" onclick="submitVotesAndShowCoupon()">
            Next
          </button>
        </div>
      `;
    }
    
    function submitVotesAndShowCoupon() {
      // Mark as voted
      STATE.hasVoted = true;
      STATE.user.votedTop = true;
      STATE.user.votedMid = true;
      STATE.user.votedLow = true;
      
      renderLogin();
      renderVoting();
      
      // Show coupon offer
      showCouponOffer();
    }
    
    function showCouponOffer() {
      const overlay = document.getElementById('overlay');
      
      overlay.innerHTML = `
        <div class="coupon-modal">
          <div class="coupon-title">🎉 Thank You!</div>
          <p class="coupon-text">
            Get <strong style="color: #4ade80;">15% OFF</strong> FlexCheck this week!
          </p>
          <input type="email" class="coupon-input" id="coupon-email" 
                 placeholder="Enter email for coupon" value="${STATE.user?.email || ''}">
          <div class="coupon-buttons">
            <button class="btn-secondary" style="flex: 1;" onclick="skipCoupon()">No Thanks</button>
            <button class="btn" style="flex: 1;" onclick="sendCoupon()">Send Coupon</button>
          </div>
        </div>
      `;
    }
    
    window.sendCoupon = function() {
      const email = document.getElementById('coupon-email').value;
      
      // TODO: Call GAS to send coupon
      // For now, just show confirmation
      
      const overlay = document.getElementById('overlay');
      overlay.innerHTML = `
        <div class="thanks-modal">
          <div class="thanks-title">Coupon Sent! ✉️</div>
          <p class="thanks-text">
            You will receive your coupon in email soon.
          </p>
          <p class="thanks-text">
            <strong style="color: #4ade80;">Thanks for voting!</strong>
          </p>
          <button class="btn" style="width: 100%; padding: 1rem;" onclick="closeAndShowResults()">
            Close
          </button>
        </div>
      `;
    };
    
    window.skipCoupon = function() {
      const overlay = document.getElementById('overlay');
      overlay.innerHTML = `
        <div class="thanks-modal">
          <div class="thanks-title">Thanks for Playing! 🎮</div>
          <button class="btn" style="width: 100%; padding: 1rem; margin-top: 1rem;" onclick="closeAndShowResults()">
            Close
          </button>
        </div>
      `;
    };
    
    window.closeAndShowResults = function() {
      closeOverlay();
      showResults();
    };
    
    function showResults() {
      renderResults();
      document.getElementById('results-widget').classList.add('show');
      setTimeout(() => {
        document.getElementById('results-widget').scrollIntoView({ behavior: 'smooth' });
      }, 100);
    }
    
    window.showTimezoneConverter = function() {
      const overlay = document.getElementById('overlay');
      
      // Live stream time: Friday 7pm CT
      const streamTime = new Date('2025-01-10T19:00:00-06:00'); // Example Friday
      
      // Get user's timezone
      const userTZ = Intl.DateTimeFormat().resolvedOptions().timeZone;
      const userTimeStr = streamTime.toLocaleTimeString('en-US', {
        timeZone: userTZ,
        hour: 'numeric',
        minute: '2-digit',
        hour12: true,
        timeZoneName: 'short'
      });
      
      const userDateStr = streamTime.toLocaleDateString('en-US', {
        timeZone: userTZ,
        weekday: 'long',
        month: 'long',
        day: 'numeric'
      });
      
      // Calculate time difference
      const now = new Date();
      const userOffset = -now.getTimezoneOffset();
      const ctOffset = -360; // CT is UTC-6
      const diffHours = (userOffset - ctOffset) / 60;
      const diffStr = diffHours === 0 ? 'Same as CT' : 
                     diffHours > 0 ? `${diffHours} hours ahead of CT` :
                     `${Math.abs(diffHours)} hours behind CT`;
      
      overlay.innerHTML = `
        <div class="timezone-modal">
          <div class="timezone-title">🕐 Live Stream Time</div>
          
          <div class="timezone-info">
            <div class="timezone-row">
              <span class="timezone-label">Stream Time (CT):</span>
              <span class="timezone-value">Friday 7:00 PM</span>
            </div>
            <div class="timezone-row">
              <span class="timezone-label">Your Time:</span>
              <span class="timezone-value">${userTimeStr}</span>
            </div>
            <div class="timezone-row">
              <span class="timezone-label">Your Date:</span>
              <span class="timezone-value">${userDateStr}</span>
            </div>
            <div class="timezone-row">
              <span class="timezone-label">Your Timezone:</span>
              <span class="timezone-value">${userTZ.split('/')[1] || userTZ}</span>
            </div>
          </div>
          
          <p style="color: #8b909b; font-size: 0.85rem; text-align: center; margin: 1rem 0;">
            ${diffStr}
          </p>
          
          <button class="timezone-close" onclick="closeOverlay()">Got It!</button>
        </div>
      `;
      overlay.classList.add('show');
    };
    
    window.closeOverlay = function() {
      document.getElementById('overlay').classList.remove('show');
    };
    
    // Initialize
    renderLogin();
    renderVoting();
  </script>
</body>
</html>